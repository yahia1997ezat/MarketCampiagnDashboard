@using BlazorApp.Data
@using System.Collections
@inject MarketingCampaignService MarketingCampaignService

<div class="simple-form">
    <form class="form">
        <div class="row p-0">
            <div class="@fieldLayoutClass">
                <div class="form-group">
                    <label for="movie-name">Name</label>
                    <input @bind="@Media.Name" type="text" class="form-control" id="movie-name"/>
                </div>
            </div>
            <div class="@fieldLayoutClass">
                <div class="form-group">
                    <label for="MediaFile">Media File</label>
                    <input @bind="@Media.MediaFile" type="text" class="form-control" id="MediaFile"/>
                </div>
            </div>
            <div class="@fieldLayoutClass">
                <div class="form-group">
                    <label >Channels</label>
                    @foreach (var channel in MarketingCampaignService.Channels)
                    {
                        <div class="mb-2">
                            <input
                                @onchange="@(e => OnChannelChange(@IsSelected(channel), @channel))"
                                 type="checkbox"
                                 checked="@IsSelected(channel)"
                                 id="@channel?.Name"
                                 name="@channel?.Name">
                            <label for="@channel?.Name">
                                @channel?.Name
                            </label>
                        </div>
                    }
                </div>
            </div>
            <div class="@fieldLayoutClass">
                <div class="form-group">
                    <label for="end-date">Choose Advertiser</label>
                    <select class="form-select d-block w-100 p-3 py-1 border" @bind="@MediaAdvertiserId">
                        @foreach (var advertiser in MarketingCampaignService.Advertisers)
                        {
                            <option value="@advertiser.Id">
                                @advertiser.Name
                            </option>
                        }
                    </select>
                </div>
            </div>

        </div>
    </form>
    <div class="alert-danger">
        @status
    </div>
    <button @onclick="SubmitForm" class="btn btn-primary">Submit</button>
    <button @onclick="Cancel" class="btn btn-secondary">Cancel</button>
</div>

@code {

    private string fieldLayoutClass = "col-12 ";
    private string status = "";

    [CascadingParameter]
    BlazoredModalInstance ModalInstance { get; set; }

    [Parameter]
    public MarketingCampaign EditMarketCampaign { get; set; }

    private Media Media { get; set; }

    private long MediaAdvertiserId { get; set; }

    bool IsSelected(Channel channel)
    {
        var cha = Media.Channels.FirstOrDefault(element => element.Id == channel.Id);
        return cha != null ? true : false;
    }

    protected override void OnInitialized()
    {
        Media = new Media()
        {
            Channels = new List<Channel>()
        };
    }

    void SubmitForm()
    {
        if (MediaAdvertiserId > 0)
        {
            Media.Advertiser = MarketingCampaignService.Advertisers.FirstOrDefault((advertiser) => advertiser.Id == MediaAdvertiserId);
        }
        else
        {
            status = "Advertiser Required";
            StateHasChanged();
            return;
        }
        Media.CreatedAt = DateTime.Now;
        ModalInstance.CloseAsync(ModalResult.Ok(Media));
    }

    void OnChannelChange(bool result, Channel channel)
    {
        if (!result)
        {
            Media.Channels.Add(channel);
        }
        else
        {
            Media.Channels.Remove(channel);
        }
        StateHasChanged();
    }

    void Cancel()
    {
        ModalInstance.CancelAsync();
    }

}