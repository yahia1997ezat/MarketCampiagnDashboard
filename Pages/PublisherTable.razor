@page "/publishers"

@using BlazorApp.Data
@inject MarketingCampaignService MarketingCampaignService
<div class="card">
    <div class="card-header d-flex justify-content-between align-items-center flex-wrap">
        <div>
            <b>
                Publishers Campaigns<br/>
                <small>This component demonstrates fetching data from a service.</small>
            </b>
        </div>
        <div>
            <button class="btn btn-info text-capitalize" @onclick="@(() => ShowEditPublisher(0))">
                <i class="fa fa-add"></i> add
            </button>
        </div>

    </div>
    <div class="card-body">
        @if (MarketingCampaignService.Publishers == null)
        {
            <p>
                <em>Loading...</em>
            </p>
        }
        else
        {
            <table class="table">
                <thead>
                <tr class="text-uppercase   text-secondary ">
                    <th>No.</th>
                    <th>Name</th>
                    <th>Supported Channels</th>
                    <th>Market Campaign</th>
                    <th>Actions</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var publisher in MarketingCampaignService.Publishers)
                {
                    <tr>
                        <td>@publisher.Id</td>
                        <td>@publisher.Name</td>
                        <td>
                            @foreach (var channel in publisher.Channels)
                            {
                                <span class="mr-2">@channel?.Name,</span>
                            }
                        </td>
                        <td>

                            @foreach (var marketingCampaign in publisher.MarketingCampaigns)
                            {
                                <span class="mr-2">@marketingCampaign?.Name,</span>
                            }
                        </td>
                        <td>
                            <button @onclick="@(() => ShowEditPublisher(@publisher.Id))" class="btn btn-light ">
                                <i class="fa fa-edit text-primary"></i>
                            </button>
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        }

    </div>
</div>


@code {

    [CascadingParameter]
    public IModalService Modal { get; set; }

    async void ShowEditPublisher(long id)
    {
        var parameters = new ModalParameters();
        parameters.Add("EditPublisher", id > 0 ? MarketingCampaignService.Publishers.FirstOrDefault((publisher) => publisher.Id == id) : null);
        var formModal = Modal.Show<AddPublisher>("Add Publisher", parameters);
        var result = await formModal.Result;
        if (result.Cancelled)
        {
            Console.WriteLine("Modal was cancelled");
        }
        else
        {
            MarketingCampaignService.MarketingCampaigns.Add((MarketingCampaign) result.Data);
            StateHasChanged();
        }
    }

}